// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSP.Payee;

#nullable disable

namespace SSP.Migrations
{
    [DbContext(typeof(PayeeContext))]
    partial class PayeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SSP.Payee.AddPayeInputFile", b =>
                {
                    b.Property<string>("CompanyRin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.HasKey("CompanyRin", "BusinessRin", "TaxYear")
                        .HasName("Input_pk");

                    b.ToTable("AddPayeInputFile", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Agency", b =>
                {
                    b.Property<int>("AgencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("agency_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgencyId"));

                    b.Property<DateTime>("AgencyCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("agency_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AgencyCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("agency_create_by");

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("agency_name");

                    b.Property<string>("AgencyStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("agency_status");

                    b.Property<int>("AgencyType")
                        .HasColumnType("int")
                        .HasColumnName("agency_type");

                    b.HasKey("AgencyId");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("SSP.Payee.AgencyType", b =>
                {
                    b.Property<int>("AgencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("agency_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgencyId"));

                    b.Property<DateTime>("AgencyCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("agency_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AgencyCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("agency_create_by");

                    b.Property<string>("AgencyStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("agency_status");

                    b.Property<string>("AgencyType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("agency_type");

                    b.HasKey("AgencyId");

                    b.ToTable("Agency_Type", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.ApiJsonStr", b =>
                {
                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Json")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("API_JsonStr", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Assessment", b =>
                {
                    b.Property<long>("AssessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("assess_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AssessId"));

                    b.Property<DateTime>("AssessCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assess_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AssessCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("assess_create_by");

                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<int?>("AssessmentApprovalStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssessmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assessment_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("AssessmentRule")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("assessment_rule");

                    b.Property<int?>("AssessmentStatus")
                        .HasColumnType("int");

                    b.Property<int>("AssetRin")
                        .HasColumnType("int")
                        .HasColumnName("asset_rin");

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_tin");

                    b.Property<int>("ProfileRef")
                        .HasColumnType("int")
                        .HasColumnName("profile_ref");

                    b.Property<int>("RuleCode")
                        .HasColumnType("int")
                        .HasColumnName("rule_code");

                    b.Property<DateTime?>("SettlementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date");

                    b.Property<DateTime>("SettlementDueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_due_date");

                    b.Property<string>("SettlementStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("settlement_status")
                        .HasDefaultValueSql("('DUE')");

                    b.Property<string>("TaxPayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tax_payer_name");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tax_payer_rin");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_type");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int")
                        .HasColumnName("tax_year");

                    b.HasKey("AssessId");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("SSP.Payee.AssessmentChild", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("AssessmentChildRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_child_ref");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<DateTime?>("Datecreated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("IsPaid")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("MonthTax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("NotificationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PaidOn")
                        .HasColumnType("datetime");

                    b.Property<string>("YearTax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("AssessmentChild", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentGroup", b =>
                {
                    b.Property<int>("AssessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("assess_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessId"));

                    b.Property<int>("AssessCreateAt")
                        .HasColumnType("int")
                        .HasColumnName("assess_create_at");

                    b.Property<DateTime>("AssessCreateBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assess_create_by")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AssessStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("assess_status");

                    b.Property<string>("AssessmentGroup1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("assessment_group");

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.HasKey("AssessId");

                    b.ToTable("Assessment_Groups", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentItem", b =>
                {
                    b.Property<long>("AssessItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("assess_item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AssessItemId"));

                    b.Property<DateTime>("AssessItemCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assess_item_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AssessItemCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("assess_item_create_by");

                    b.Property<int>("AssessmentGroup")
                        .HasColumnType("int")
                        .HasColumnName("assessment_group");

                    b.Property<string>("AssessmentItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("assessment_item_name");

                    b.Property<int>("AssessmentSubGroup")
                        .HasColumnType("int")
                        .HasColumnName("assessment_sub_group");

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.Property<string>("Computation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("computation");

                    b.Property<double?>("EarlyAmount")
                        .HasColumnType("float")
                        .HasColumnName("early_amount");

                    b.Property<int>("ItemCategory")
                        .HasColumnType("int")
                        .HasColumnName("item_category");

                    b.Property<string>("ItemRef")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("item_ref");

                    b.Property<int>("ItemSubCategory")
                        .HasColumnType("int")
                        .HasColumnName("item_sub_category");

                    b.Property<double?>("LateAmount")
                        .HasColumnType("float")
                        .HasColumnName("late_amount");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float")
                        .HasColumnName("percentage");

                    b.Property<int>("RevenueAgency")
                        .HasColumnType("int")
                        .HasColumnName("revenue_agency");

                    b.Property<int>("RevenueStream")
                        .HasColumnType("int")
                        .HasColumnName("revenue_stream");

                    b.Property<int>("RevenueSubStream")
                        .HasColumnType("int")
                        .HasColumnName("revenue_sub_stream");

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float")
                        .HasColumnName("tax_amount");

                    b.Property<double>("TaxBaseAmount")
                        .HasColumnType("float")
                        .HasColumnName("tax_base_amount");

                    b.HasKey("AssessItemId");

                    b.ToTable("Assessment_Items", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentItemApi", b =>
                {
                    b.Property<int?>("AgencyId")
                        .HasColumnType("int")
                        .HasColumnName("AgencyID");

                    b.Property<string>("AgencyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentGroupId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentGroupID");

                    b.Property<string>("AssessmentGroupName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentItemCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemCategoryID");

                    b.Property<string>("AssessmentItemCategoryName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentItemReferenceNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AssessmentItemSubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemSubCategoryID");

                    b.Property<string>("AssessmentItemSubCategoryName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentSubGroupId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentSubGroupID");

                    b.Property<string>("AssessmentSubGroupName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ComputationId")
                        .HasColumnType("int")
                        .HasColumnName("ComputationID");

                    b.Property<string>("ComputationName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id");

                    b.Property<string>("Percentage")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProfileDescription")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("ProfileReferenceNo")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("RevenueStreamId")
                        .HasColumnType("int")
                        .HasColumnName("RevenueStreamID");

                    b.Property<string>("RevenueStreamName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("RevenueSubStreamId")
                        .HasColumnType("int")
                        .HasColumnName("RevenueSubStreamID");

                    b.Property<string>("RevenueSubStreamName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TaxAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasIndex(new[] { "AssetRin", "AssessmentRuleCode" }, "Ind_Assessment_Item_API");

                    b.ToTable("Assessment_Item_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentItemBkApi", b =>
                {
                    b.Property<int?>("AgencyId")
                        .HasColumnType("int")
                        .HasColumnName("AgencyID");

                    b.Property<string>("AgencyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentGroupId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentGroupID");

                    b.Property<string>("AssessmentGroupName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentItemCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemCategoryID");

                    b.Property<string>("AssessmentItemCategoryName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentItemReferenceNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AssessmentItemSubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemSubCategoryID");

                    b.Property<string>("AssessmentItemSubCategoryName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentSubGroupId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentSubGroupID");

                    b.Property<string>("AssessmentSubGroupName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ComputationId")
                        .HasColumnType("int")
                        .HasColumnName("ComputationID");

                    b.Property<string>("ComputationName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Percentage")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProfileDescription")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("ProfileReferenceNo")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("RevenueStreamId")
                        .HasColumnType("int")
                        .HasColumnName("RevenueStreamID");

                    b.Property<string>("RevenueStreamName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("RevenueSubStreamId")
                        .HasColumnType("int")
                        .HasColumnName("RevenueSubStreamID");

                    b.Property<string>("RevenueSubStreamName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TaxAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("Assessment_Item_BK_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentItemCategory", b =>
                {
                    b.Property<int>("AssitemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("assitem_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssitemId"));

                    b.Property<DateTime>("AssitemCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assitem_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AssitemCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("assitem_create_by");

                    b.Property<string>("AssitemStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("assitem_status");

                    b.Property<string>("ItemCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("item_category");

                    b.HasKey("AssitemId");

                    b.ToTable("Assessment_Item_Categories", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentItemSubCategory", b =>
                {
                    b.Property<int>("ItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("item_category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCategoryId"));

                    b.Property<int?>("ItemCategory")
                        .HasColumnType("int")
                        .HasColumnName("item_category");

                    b.Property<DateTime?>("ItemCategoryCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("item_category_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ItemCategoryCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("item_category_create_by");

                    b.Property<string>("ItemCategoryStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("item_category_status");

                    b.Property<string>("ItemSubCategory")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("item_sub_category");

                    b.HasKey("ItemCategoryId");

                    b.ToTable("Assessment_Item_Sub_Category", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentRule", b =>
                {
                    b.Property<int>("AssessRulesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("assess_rules_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessRulesId"));

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssessRulesCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assess_rules_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("AssessRulesCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("assess_rules_create_by");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<string>("AssessmentItems")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("assessment_items");

                    b.Property<long>("AssessmentRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("(CONVERT([bigint],(0)))");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("assessment_rule_name");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int")
                        .HasColumnName("frequency");

                    b.Property<int?>("PaymentOptions")
                        .HasColumnType("int")
                        .HasColumnName("payment_options");

                    b.Property<int?>("Profile")
                        .HasColumnType("int")
                        .HasColumnName("profile");

                    b.Property<string>("RuleCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("rule_code");

                    b.Property<int?>("RuleRun")
                        .HasColumnType("int")
                        .HasColumnName("rule_run");

                    b.Property<string>("SettlementMethods")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("settlement_methods");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int")
                        .HasColumnName("tax_year");

                    b.HasKey("AssessRulesId");

                    b.ToTable("Assessment_Rules", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentRule1", b =>
                {
                    b.Property<double?>("Active")
                        .HasColumnType("float");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("AssessmentRuleId")
                        .HasColumnType("float")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("PaymentFrequencyId")
                        .HasColumnType("float")
                        .HasColumnName("PaymentFrequencyID");

                    b.Property<double?>("PaymentOptionId")
                        .HasColumnType("float")
                        .HasColumnName("PaymentOptionID");

                    b.Property<double?>("ProfileId")
                        .HasColumnType("float")
                        .HasColumnName("ProfileID");

                    b.Property<double?>("RuleRunId")
                        .HasColumnType("float")
                        .HasColumnName("RuleRunID");

                    b.Property<double?>("TaxMonth")
                        .HasColumnType("float");

                    b.Property<double?>("TaxYear")
                        .HasColumnType("float");

                    b.ToTable("AssessmentRules", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentRuleMasterApi", b =>
                {
                    b.Property<int?>("Active")
                        .HasColumnType("int");

                    b.Property<int?>("AssessmentAmount")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(15)
                        .HasColumnType("nchar(15)")
                        .IsFixedLength();

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int?>("PaymentFrequencyId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentFrequencyID");

                    b.Property<int?>("PaymentOptionId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentOptionID");

                    b.Property<string>("ProfileId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("ProfileID")
                        .IsFixedLength();

                    b.Property<int?>("RuleRunId")
                        .HasColumnType("int")
                        .HasColumnName("RuleRunID");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable("Assessment_rule_master_api", "spike");
                });

            modelBuilder.Entity("SSP.Payee.AssessmentRulesApi", b =>
                {
                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("PaymentFrequencyId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentFrequencyID");

                    b.Property<string>("PaymentFrequencyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("PaymentOptionId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentOptionID");

                    b.Property<string>("PaymentOptionName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProfileDescription")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("ProfileReferenceNo")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("RuleRunId")
                        .HasColumnType("int")
                        .HasColumnName("RuleRunID");

                    b.Property<string>("RuleRunName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasIndex(new[] { "TaxPayerRin" }, "Ind_Assessment_Rules_API");

                    b.ToTable("Assessment_Rules_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentStatus", b =>
                {
                    b.Property<int>("AssStId")
                        .HasColumnType("int")
                        .HasColumnName("Ass_st_id");

                    b.Property<int?>("Active")
                        .HasColumnType("int")
                        .HasColumnName("active");

                    b.Property<int?>("AssNextStId")
                        .HasColumnType("int")
                        .HasColumnName("ass_next_st_id");

                    b.Property<DateTime>("AssStCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Ass_st_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AssStCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("Ass_st_create_by");

                    b.Property<string>("AssessmentStatus1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Assessment_status");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("status_description");

                    b.HasKey("AssStId");

                    b.ToTable("Assessment_Status", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentSubGroup", b =>
                {
                    b.Property<int>("AssessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("assess_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessId"));

                    b.Property<int>("AssessCreateAt")
                        .HasColumnType("int")
                        .HasColumnName("assess_create_at");

                    b.Property<DateTime>("AssessCreateBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assess_create_by")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AssessStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("assess_status");

                    b.Property<int>("AssessmentGroup")
                        .HasColumnType("int")
                        .HasColumnName("assessment_group");

                    b.Property<string>("AssessmentSubGroup1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("assessment_sub_group");

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.HasKey("AssessId");

                    b.ToTable("Assessment_Sub_Groups", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssessmentsApi", b =>
                {
                    b.Property<int>("AssessmentId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentID");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("AssessmentDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentItemReferenceNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentNotes")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRefNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("AssessmentRuleAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("AssessmentRuleId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ProfileDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ProfileId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ProfileID");

                    b.Property<string>("ProfileReferenceNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("SettlementDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SettlementDueDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("SettlementStatusId")
                        .HasColumnType("int")
                        .HasColumnName("SettlementStatusID");

                    b.Property<string>("SettlementStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<double?>("TaxBaseAmount")
                        .HasColumnType("float");

                    b.Property<int>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AssessmentId");

                    b.ToTable("Assessments_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssetTaxPayerDetailsApi", b =>
                {
                    b.Property<string>("Active")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ActiveText")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("AssetLga")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetLGA");

                    b.Property<string>("AssetName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("BuildingUnitId")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("BuildingUnitID");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TaxPayerEmailAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerMobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxPayerRinnumber")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("TaxPayerRINNumber");

                    b.Property<int?>("TaxPayerRoleId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerRoleID");

                    b.Property<string>("TaxPayerRoleName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Tpaid")
                        .HasColumnType("int")
                        .HasColumnName("TPAID");

                    b.Property<string>("UnitNumber")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.ToTable("AssetTaxPayerDetails_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.AssetType", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("asset_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<DateTime>("AssetCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("asset_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AssetCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("asset_create_by");

                    b.Property<string>("AssetStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("asset_status");

                    b.Property<string>("AssetType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("asset_type");

                    b.HasKey("AssetId");

                    b.ToTable("Asset_Type", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Building", b =>
                {
                    b.Property<long>("BuildingId")
                        .HasColumnType("bigint")
                        .HasColumnName("building_id");

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.Property<int>("BuildingAccupancy")
                        .HasColumnType("int")
                        .HasColumnName("building_accupancy");

                    b.Property<int>("BuildingAccupancyType")
                        .HasColumnType("int")
                        .HasColumnName("building_accupancy_type");

                    b.Property<int>("BuildingCompletion")
                        .HasColumnType("int")
                        .HasColumnName("building_completion");

                    b.Property<DateTime>("BuildingCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("building_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BuildingCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("building_create_by");

                    b.Property<string>("BuildingFunction")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("building_function");

                    b.Property<string>("BuildingName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("building_name");

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("building_number");

                    b.Property<int?>("BuildingOwnership")
                        .HasColumnType("int")
                        .HasColumnName("building_ownership");

                    b.Property<int>("BuildingPurpose")
                        .HasColumnType("int")
                        .HasColumnName("building_purpose");

                    b.Property<long>("BuildingRin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("building_rin");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BuildingRin"));

                    b.Property<string>("BuildingTagNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("building_tag_number");

                    b.Property<int>("BuildingType")
                        .HasColumnType("int")
                        .HasColumnName("building_type");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("latitude");

                    b.Property<int>("Lga")
                        .HasColumnType("int")
                        .HasColumnName("lga");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("longitude");

                    b.Property<string>("OffStreetName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("off_street_name");

                    b.Property<string>("Profile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("profile");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("status");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("street_name");

                    b.Property<int>("Town")
                        .HasColumnType("int")
                        .HasColumnName("town");

                    b.Property<int>("Ward")
                        .HasColumnType("int")
                        .HasColumnName("ward");

                    b.HasKey("BuildingId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("SSP.Payee.Business", b =>
                {
                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("business_id");

                    b.Property<string>("AssetType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("asset_type");

                    b.Property<int>("BusinessCategory")
                        .HasColumnType("int")
                        .HasColumnName("business_category");

                    b.Property<int>("BusinessCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("business_create_by");

                    b.Property<DateTime>("BusinessCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("business_create_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BusinessLga")
                        .HasColumnType("int")
                        .HasColumnName("business_lga");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("business_name");

                    b.Property<int>("BusinessOperations")
                        .HasColumnType("int")
                        .HasColumnName("business_operations");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("business_rin");

                    b.Property<int>("BusinessSector")
                        .HasColumnType("int")
                        .HasColumnName("business_sector");

                    b.Property<int>("BusinessStructure")
                        .HasColumnType("int")
                        .HasColumnName("business_structure");

                    b.Property<int>("BusinessSubSector")
                        .HasColumnType("int")
                        .HasColumnName("business_sub_sector");

                    b.Property<int?>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("Profile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("profile");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("status");

                    b.HasKey("BusinessId");

                    b.HasIndex(new[] { "BusinessRin" }, "NonClusteredIndex-20190503-063052");

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("SSP.Payee.BusinessCategory", b =>
                {
                    b.Property<int>("BsCtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bs_ct_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BsCtId"));

                    b.Property<DateTime>("BsCtCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bs_ct_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BsCtCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("bs_ct_create_by");

                    b.Property<string>("BsCtStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bs_ct_status");

                    b.Property<string>("BusinessCategory1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("business_category");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.HasKey("BsCtId")
                        .HasName("PK_business_category");

                    b.ToTable("Business_Category", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.BusinessEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetRin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Designation")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OtherName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Business_Employee");

                    b.ToTable("BusinessEmployees");
                });

            modelBuilder.Entity("SSP.Payee.BusinessOperation", b =>
                {
                    b.Property<int>("BsOpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bs_op_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BsOpId"));

                    b.Property<DateTime>("BsOpCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bs_op_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BsOpCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("bs_op_create_by");

                    b.Property<string>("BsOpStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bs_op_status");

                    b.Property<string>("BusinessOperations")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("business_operations");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.HasKey("BsOpId")
                        .HasName("PK_business_operations");

                    b.ToTable("Business_Operations", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.BusinessSector", b =>
                {
                    b.Property<int>("BsScId")
                        .HasColumnType("int")
                        .HasColumnName("bs_sc_id");

                    b.Property<DateTime>("BsScCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bs_sc_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BsScCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("bs_sc_create_by");

                    b.Property<string>("BsScStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bs_sc_status");

                    b.Property<int>("BusinessCategory")
                        .HasColumnType("int")
                        .HasColumnName("business_category");

                    b.Property<string>("BusinessSector1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("business_sector");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.HasKey("BsScId")
                        .HasName("PK_business_sectors");

                    b.ToTable("Business_Sectors", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.BusinessStructure", b =>
                {
                    b.Property<int>("BsStId")
                        .HasColumnType("int")
                        .HasColumnName("bs_st_id");

                    b.Property<string>("BsCtStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bs_ct_status");

                    b.Property<DateTime>("BsStCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bs_st_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BsStCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("bs_st_create_by");

                    b.Property<string>("BusinessStructure1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("business_structure");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.HasKey("BsStId")
                        .HasName("PK_business_structure");

                    b.ToTable("Business_Structure", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.BusinessSubSector", b =>
                {
                    b.Property<int>("BsSbId")
                        .HasColumnType("int")
                        .HasColumnName("bs_sb_id");

                    b.Property<DateTime>("BsSbCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bs_sb_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BsSbCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("bs_sb_create_by");

                    b.Property<string>("BsSbStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bs_sb_status");

                    b.Property<int>("BusinessCategory")
                        .HasColumnType("int")
                        .HasColumnName("business_category");

                    b.Property<int>("BusinessSector")
                        .HasColumnType("int")
                        .HasColumnName("business_sector");

                    b.Property<string>("BusinessSubSector1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("business_sub_sector");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.HasKey("BsSbId")
                        .HasName("PK_business_sub_sectors1");

                    b.ToTable("Business_Sub_Sectors", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.BusinessType", b =>
                {
                    b.Property<int>("BusinessTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Business_Type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessTypeId"));

                    b.Property<string>("BusinessType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Business_Type");

                    b.Property<DateTime>("BusinessTypeCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Business_Type_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BusinessTypeCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("Business_Type_create_by");

                    b.Property<string>("BusinessTypeStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Business_Type_status");

                    b.HasKey("BusinessTypeId")
                        .HasName("PK_Business_Type_Type");

                    b.ToTable("Business_Type", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Business_Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<int>("BusinessID")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Empployee_Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeID");

                    b.ToTable("BusinessEmployee");
                });

            modelBuilder.Entity("SSP.Payee.BusinessesApi", b =>
                {
                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("BusinessID");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("BusinessCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessCategoryID");

                    b.Property<string>("BusinessCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessOperationId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessOperationID");

                    b.Property<string>("BusinessOperationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<int>("BusinessSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSectorID");

                    b.Property<string>("BusinessSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessStructureId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessStructureID");

                    b.Property<string>("BusinessStructureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessSubSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSubSectorID");

                    b.Property<string>("BusinessSubSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessTypeID");

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Lgaid")
                        .HasColumnType("int")
                        .HasColumnName("LGAID");

                    b.Property<string>("Lganame")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LGAName");

                    b.Property<int>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("SizeID");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("BusinessId");

                    b.HasIndex(new[] { "BusinessRin" }, "Ind_Businesses_API");

                    b.ToTable("Businesses_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.BusinessesApiMain", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("BusinessCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessCategoryID");

                    b.Property<string>("BusinessCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("BusinessID");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessOperationId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessOperationID");

                    b.Property<string>("BusinessOperationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<int>("BusinessSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSectorID");

                    b.Property<string>("BusinessSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessStructureId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessStructureID");

                    b.Property<string>("BusinessStructureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessSubSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSubSectorID");

                    b.Property<string>("BusinessSubSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessTypeID");

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Lgaid")
                        .HasColumnType("int")
                        .HasColumnName("LGAID");

                    b.Property<string>("Lganame")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LGAName");

                    b.Property<int>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("SizeID");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Business__3214EC072C465F80");

                    b.ToTable("Businesses_API_Main", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.BusinessesBkApi", b =>
                {
                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("BusinessID");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("BusinessCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessCategoryID");

                    b.Property<string>("BusinessCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessOperationId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessOperationID");

                    b.Property<string>("BusinessOperationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<int>("BusinessSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSectorID");

                    b.Property<string>("BusinessSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessStructureId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessStructureID");

                    b.Property<string>("BusinessStructureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessSubSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSubSectorID");

                    b.Property<string>("BusinessSubSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessTypeID");

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Lgaid")
                        .HasColumnType("int")
                        .HasColumnName("LGAID");

                    b.Property<string>("Lganame")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LGAName");

                    b.Property<int>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("SizeID");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("BusinessId");

                    b.ToTable("BusinessesBK_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.BusinessesFullApi", b =>
                {
                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("BusinessCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessCategoryID");

                    b.Property<string>("BusinessCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("BusinessID");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessOperationId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessOperationID");

                    b.Property<string>("BusinessOperationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<int>("BusinessSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSectorID");

                    b.Property<string>("BusinessSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessStructureId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessStructureID");

                    b.Property<string>("BusinessStructureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessSubSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSubSectorID");

                    b.Property<string>("BusinessSubSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessTypeID");

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Lgaid")
                        .HasColumnType("int")
                        .HasColumnName("LGAID");

                    b.Property<string>("Lganame")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LGAName");

                    b.Property<int>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("SizeID");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Businesses_Full_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.ClearanceCertificate", b =>
                {
                    b.Property<long>("CcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("cc_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CcId"));

                    b.Property<string>("AssetRin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("asset_rin");

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.Property<DateTime>("CcCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("cc_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CcCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("cc_create_by");

                    b.Property<string>("CertificateNumber")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("certificate_number");

                    b.Property<string>("CertificateRef")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("certificate_ref");

                    b.Property<string>("CertificateStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("certificate_status");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CompanyTIN");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expiry_date");

                    b.Property<int>("FinancialYear")
                        .HasColumnType("int")
                        .HasColumnName("financial_year");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("issue_date");

                    b.Property<string>("MonthCertificate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("month_certificate");

                    b.Property<int?>("RevenueStream")
                        .HasColumnType("int")
                        .HasColumnName("revenue_stream");

                    b.Property<string>("TaxPayerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_payer_name");

                    b.Property<int>("TaxPayerRin")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_rin");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_type");

                    b.HasKey("CcId");

                    b.ToTable("Clearance_Certificates", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.CompaniesApi", b =>
                {
                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("CompanyID");

                    b.Property<string>("Active")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ActiveText")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("EconomicActivitiesId")
                        .HasColumnType("int")
                        .HasColumnName("EconomicActivitiesID");

                    b.Property<string>("EconomicActivitiesName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmailAddress1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmailAddress2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("NotificationMethodId")
                        .HasColumnType("int")
                        .HasColumnName("NotificationMethodID");

                    b.Property<string>("NotificationMethodName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("RegisterationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RegisterationStatusId")
                        .HasColumnType("int")
                        .HasColumnName("RegisterationStatusID");

                    b.Property<string>("RegisterationStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxOfficeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxOfficeID");

                    b.Property<string>("TaxOfficeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TIN");

                    b.HasKey("CompanyId")
                        .HasName("PK_CompaniesAPI");

                    b.ToTable("Companies_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Company", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("company_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CompanyId"));

                    b.Property<double?>("AccountBalance")
                        .HasColumnType("float")
                        .HasColumnName("account_balance");

                    b.Property<string>("Add1Hno")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Add1_hno");

                    b.Property<string>("Add2Street")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Add2_street");

                    b.Property<string>("Add3OffstreetTown")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Add3_offstreet_town");

                    b.Property<DateTime>("CompanyCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("company_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CompanyCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("company_create_by");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact_person");

                    b.Property<int>("EconomicActivity")
                        .HasColumnType("int")
                        .HasColumnName("economic_activity");

                    b.Property<string>("EmailAddress1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<string>("EmailAddress2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_2");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_2");

                    b.Property<int>("PreferredNotificationMethod")
                        .HasColumnType("int")
                        .HasColumnName("preferred_notification_method");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<int?>("TaxOffice")
                        .HasColumnType("int")
                        .HasColumnName("tax_office");

                    b.Property<string>("TaxPayerStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tax_payer_status");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_type");

                    b.Property<int?>("Town")
                        .HasColumnType("int")
                        .HasColumnName("town");

                    b.Property<int?>("Ward")
                        .HasColumnType("int")
                        .HasColumnName("ward");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SSP.Payee.CompanyListApi", b =>
                {
                    b.Property<int>("CompanyListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyListID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyListId"));

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIN");

                    b.HasKey("CompanyListId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("CompanyListId"), false);

                    b.HasIndex(new[] { "TaxPayerId" }, "ClusteredIndex-20190508-102124");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "TaxPayerId" }, "ClusteredIndex-20190508-102124"));

                    b.HasIndex(new[] { "TaxPayerRin" }, "Ind_CompanyList_API");

                    b.ToTable("CompanyList_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.CompanyListBkApi", b =>
                {
                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIN");

                    b.HasKey("TaxPayerId");

                    b.ToTable("CompanyListBK_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Directorate", b =>
                {
                    b.Property<int>("DirectoratesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("directorates_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectoratesId"));

                    b.Property<string>("Directorate1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("directorate");

                    b.Property<DateTime>("DirectoratesCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("directorates_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DirectoratesCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("directorates_create_by");

                    b.Property<int>("RevenueStream")
                        .HasColumnType("int")
                        .HasColumnName("revenue_stream");

                    b.HasKey("DirectoratesId");

                    b.ToTable("Directorates");
                });

            modelBuilder.Entity("SSP.Payee.EconomicActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("Create_by");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("Tax_payer_type");

                    b.HasKey("Id")
                        .HasName("PK_economic_activities");

                    b.ToTable("Economic_Activities", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.EirsUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("address");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("designation");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mobile_no");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("status")
                        .IsFixedLength();

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.HasKey("UserId");

                    b.ToTable("Eirs_User", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.EmployeeAnnualTax", b =>
                {
                    b.Property<decimal?>("AnnualTax")
                        .HasColumnType("numeric(29, 2)");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.ToTable((string)null);

                    b.ToView("EmployeeAnnualTax", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.EmployeeContributionOutputFile", b =>
                {
                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AprilContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("AugustContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("DecemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EmployeRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployeRIN");

                    b.Property<decimal?>("FebruaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal?>("JanuaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JulyContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JuneContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MarchContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MayContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("NovemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OctoberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("SpetemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.ToTable("EmployeeContributionOutputFile", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Employees_Monthly_Income", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Basic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusinessID")
                        .HasColumnType("int");

                    b.Property<string>("LTG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NHF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NHIS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rent")
                        .HasColumnType("float");

                    b.Property<double>("Total_Income")
                        .HasColumnType("float");

                    b.Property<string>("Transport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("EmployeesMonthlyIncome");
                });

            modelBuilder.Entity("SSP.Payee.Employees_Monthly_Schedule", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Basic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusinessID")
                        .HasColumnType("int");

                    b.Property<string>("CRA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Chargable_Income")
                        .HasColumnType("float");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<double>("Gross_Income")
                        .HasColumnType("float");

                    b.Property<string>("LTG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("NHF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NHIS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pension")
                        .HasColumnType("float");

                    b.Property<string>("Rent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<double>("Tax_Free_Pay")
                        .HasColumnType("float");

                    b.Property<double>("Total_Income")
                        .HasColumnType("float");

                    b.Property<string>("Transport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.ToTable("EmployeesMonthlySchedule");
                });

            modelBuilder.Entity("SSP.Payee.EmployerAssessmentOutputFile", b =>
                {
                    b.Property<decimal?>("AprilCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("AugustCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("DecemberCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EmployerRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("FebruaryCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal?>("JanuaryCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JulyCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JuneCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MarchCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MayCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("NovemberCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OctoberCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("SpetemberCollections")
                        .HasColumnType("numeric(18, 2)");

                    b.ToTable("EmployerAssessmentOutputFile", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Exception", b =>
                {
                    b.Property<int>("ExceptionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("exceptions_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExceptionsId"));

                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<int>("AssessmentRef")
                        .HasColumnType("int")
                        .HasColumnName("assessment_ref");

                    b.Property<double>("ExceptionsAmount")
                        .HasColumnType("float")
                        .HasColumnName("exceptions_amount");

                    b.Property<DateTime>("ExceptionsCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("exceptions_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ExceptionsCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("exceptions_create_by");

                    b.Property<string>("ExceptionsRef")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("exceptions_ref");

                    b.Property<int>("ExceptionsType")
                        .HasColumnType("int")
                        .HasColumnName("exceptions_type");

                    b.Property<double?>("SettlementAmount")
                        .HasColumnType("float")
                        .HasColumnName("settlement_amount");

                    b.Property<DateTime?>("SettlementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date");

                    b.Property<string>("SettlementRef")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("settlement_ref");

                    b.Property<int?>("SettlementStatus")
                        .HasColumnType("int")
                        .HasColumnName("settlement_status");

                    b.HasKey("ExceptionsId");

                    b.ToTable("Exceptions");
                });

            modelBuilder.Entity("SSP.Payee.ExceptionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("Create_by");

                    b.Property<string>("ExceptionTypes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Exception_types");

                    b.HasKey("Id");

                    b.ToTable("Exception_Types", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.FileStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("FileStatus", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.FormMaster", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormId"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FormAppType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FormName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FormPath")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FormStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("FormId");

                    b.ToTable("FormMaster", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.GroupFormRelation", b =>
                {
                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date")
                        .HasColumnName("created_on");

                    b.Property<int>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("form_id");

                    b.Property<int>("GroupFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_form_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupFormId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.ToTable("GroupFormRelation", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.GroupMaster", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("group_name");

                    b.Property<string>("GroupStatusAI")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("group_status_A_I")
                        .IsFixedLength();

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.ToTable("GroupMaster", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Individual", b =>
                {
                    b.Property<long>("IndId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ind_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IndId"));

                    b.Property<string>("AccountBalance")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("account_balance");

                    b.Property<string>("BioMetricDetails")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("bio_metric_details")
                        .IsFixedLength();

                    b.Property<string>("BusinessRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("business_rin");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("date_of_birth");

                    b.Property<int?>("EconomicActivity")
                        .HasColumnType("int")
                        .HasColumnName("economic_activity");

                    b.Property<string>("EmailAddress1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<string>("EmailAddress2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<DateTime>("IndCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ind_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IndCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("ind_create_by");

                    b.Property<string>("IsValidated")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<int?>("MaritalStatus")
                        .HasColumnType("int")
                        .HasColumnName("marital_status");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("middle_name");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_2");

                    b.Property<int>("Nationality")
                        .HasColumnType("int")
                        .HasColumnName("nationality");

                    b.Property<int?>("PrefferedNotificationMethod")
                        .HasColumnType("int")
                        .HasColumnName("preffered_notification_method");

                    b.Property<int?>("TaxOffice")
                        .HasColumnType("int")
                        .HasColumnName("tax_office");

                    b.Property<int?>("TaxPayerStatus")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_status");

                    b.Property<string>("TaxPayerType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_payer_type");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tin");

                    b.Property<int>("Title")
                        .HasColumnType("int")
                        .HasColumnName("title");

                    b.Property<string>("UserRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("user_rin");

                    b.HasKey("IndId");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("SSP.Payee.IndividualsApi", b =>
                {
                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIN");

                    b.HasKey("TaxPayerId");

                    b.ToTable("Individuals_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.IndividualsApiInput", b =>
                {
                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIN");

                    b.HasKey("TaxPayerId");

                    b.ToTable("Individuals_API_Input", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.LegacySubmissionsPaye", b =>
                {
                    b.Property<double?>("AnnualMeal")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualUtility")
                        .HasColumnType("float");

                    b.Property<double?>("Basic")
                        .HasColumnType("float");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<int>("Lsid")
                        .HasColumnType("int")
                        .HasColumnName("LSID");

                    b.Property<double?>("Ltg")
                        .HasColumnType("float")
                        .HasColumnName("LTG");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("Others")
                        .HasColumnType("float");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<double?>("Rent")
                        .HasColumnType("float");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<string>("TpTin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Tp_TIN");

                    b.Property<double?>("Trans")
                        .HasColumnType("float");

                    b.HasIndex(new[] { "TpTin", "TaxYear", "BusinessRin" }, "NonClusteredIndex-20190503-063606");

                    b.ToTable("LegacySubmissionsPAYE", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.LocalGovernmentArea", b =>
                {
                    b.Property<int>("LgaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lga_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LgaId"));

                    b.Property<string>("Lga")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lga");

                    b.Property<string>("LgaClass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lga_class");

                    b.Property<DateTime>("LgaCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("lga_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("LgaCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("lga_create_by");

                    b.Property<string>("LgaStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("lga_status");

                    b.HasKey("LgaId");

                    b.ToTable("Local_Government_Areas", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.MyView", b =>
                {
                    b.Property<string>("AssessmentItemId")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EmployerRIN");

                    b.Property<double?>("MonthlyTax")
                        .HasColumnType("float")
                        .HasColumnName("monthlyTax");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("MyView", "spike");
                });

            modelBuilder.Entity("SSP.Payee.MyView1", b =>
                {
                    b.Property<decimal?>("AprilContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentYear1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<decimal?>("AugustContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("DecemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EmployeRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployeRIN");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("FebruaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("JanuaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JulyContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JuneContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MarchContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MayContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("NovemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OctoberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("SpetemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable((string)null);

                    b.ToView("MyView_1", "spike");
                });

            modelBuilder.Entity("SSP.Payee.Nationality", b =>
                {
                    b.Property<string>("Adjective")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adjective");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country_code");

                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nationality_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityId"));

                    b.ToTable("Nationality", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("EventRef")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("event_ref");

                    b.Property<DateTime?>("NotCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("not_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("NotCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("not_create_by");

                    b.Property<DateTime?>("NotificationsDate")
                        .HasColumnType("datetime")
                        .HasColumnName("notifications_date");

                    b.Property<int?>("NotificationsMethod")
                        .HasColumnType("int")
                        .HasColumnName("notifications_method");

                    b.Property<string>("NotificationsRef")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("notifications_ref");

                    b.Property<string>("NotificationsStatus")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("notifications_status");

                    b.Property<int?>("NotificationsType")
                        .HasColumnType("int")
                        .HasColumnName("notifications_type");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("tax_payer_rin");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SSP.Payee.NotificationMethod", b =>
                {
                    b.Property<int>("NotemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notem_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotemId"));

                    b.Property<DateTime>("NotemCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("notem_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("NotemCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("notem_create_by");

                    b.Property<string>("NotificationMethod1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("notification_method");

                    b.HasKey("NotemId");

                    b.ToTable("Notification_Method", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FirstEscalation")
                        .HasColumnType("int");

                    b.Property<string>("NotificationTypes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("notification_types");

                    b.Property<DateTime>("NottCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("nott_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("NottCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("nott_create_by");

                    b.Property<int?>("SecondEscalation")
                        .HasColumnType("int");

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("type_description");

                    b.HasKey("Id");

                    b.ToTable("Notification_Types", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.PayeInputFile", b =>
                {
                    b.Property<double?>("AnnualBasic")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualGross")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualMeal")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualRent")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualTransport")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualUtility")
                        .HasColumnType("float");

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployeeTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeTIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("EndMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("LeaveTransportAnnual")
                        .HasColumnType("float")
                        .HasColumnName("LeaveTransport_Annual");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("OtherAllowancesAnnual")
                        .HasColumnType("float")
                        .HasColumnName("OtherAllowances_Annual");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable("PayeInputFile", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.PayeOuputFile", b =>
                {
                    b.Property<double?>("AnnualGross")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualTax")
                        .HasColumnType("float");

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("ChargeableIncome")
                        .HasColumnType("float");

                    b.Property<double?>("Cra")
                        .HasColumnType("float")
                        .HasColumnName("CRA");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployeeTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeTIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("EndMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("MonthlyTax")
                        .HasColumnType("float");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("TaxFreePay")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("ValidatedNhf")
                        .HasColumnType("float")
                        .HasColumnName("ValidatedNHF");

                    b.Property<double?>("ValidatedNhis")
                        .HasColumnType("float")
                        .HasColumnName("ValidatedNHIS");

                    b.Property<double?>("ValidatedPension")
                        .HasColumnType("float");

                    b.HasIndex(new[] { "Status" }, "Ind_PayeOuputFile");

                    b.HasIndex(new[] { "EmployerRin", "EmployeeRin", "AssessmentYear" }, "NonClusteredIndex-20190508-102920");

                    b.ToTable("PayeOuputFile", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.PayesubmissionAbhayLive", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("EstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("est_name");

                    b.Property<double?>("EstTin")
                        .HasColumnType("float")
                        .HasColumnName("est_tin");

                    b.Property<double?>("MaySubmission")
                        .HasColumnType("float")
                        .HasColumnName("MAY SUBMISSION");

                    b.ToTable("PAYESUBMISSION_ABHAY_LIVE", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.PaymentFrequency", b =>
                {
                    b.Property<int>("PayfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payf_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayfId"));

                    b.Property<DateTime>("PayfCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("payf_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayfCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("payf_create_by");

                    b.Property<string>("PayfStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("payf_status");

                    b.Property<string>("PaymentFrequency1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_frequency");

                    b.HasKey("PayfId");

                    b.ToTable("Payment_Frequency", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.PaymentOption", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<DateTime>("PaymentCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("payment_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PaymentCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("payment_create_by");

                    b.Property<string>("PaymentOption1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_option");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("payment_status");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment_Options", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.PreAsessmentTemp", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<double?>("MonthlyTax")
                        .HasColumnType("float");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable("Pre_Asessment_Temp", "spike");
                });

            modelBuilder.Entity("SSP.Payee.PreAssessment", b =>
                {
                    b.Property<long>("AssessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("assess_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AssessId"));

                    b.Property<DateTime>("AssessCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assess_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AssessCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("assess_create_by");

                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<int?>("AssessmentApprovalStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssessmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assessment_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("AssessmentRule")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("assessment_rule");

                    b.Property<int?>("AssessmentStatus")
                        .HasColumnType("int");

                    b.Property<int>("AssetRin")
                        .HasColumnType("int")
                        .HasColumnName("asset_rin");

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_tin");

                    b.Property<int>("ProfileRef")
                        .HasColumnType("int")
                        .HasColumnName("profile_ref");

                    b.Property<int>("RuleCode")
                        .HasColumnType("int")
                        .HasColumnName("rule_code");

                    b.Property<DateTime?>("SettlementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date");

                    b.Property<DateTime>("SettlementDueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_due_date");

                    b.Property<string>("SettlementStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("settlement_status")
                        .HasDefaultValueSql("('DUE')");

                    b.Property<string>("TaxPayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tax_payer_name");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tax_payer_rin");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_type");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int")
                        .HasColumnName("tax_year");

                    b.HasKey("AssessId");

                    b.ToTable("Pre_Assessment", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.PreAssessment1", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("AssessmentMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployerRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployerRIN");

                    b.ToTable((string)null);

                    b.ToView("PreAssessment", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.PreAssessmentRdm", b =>
                {
                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("AssessmentRdmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssessmentRDM_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessmentRdmId"));

                    b.Property<string>("AssessmentRefNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Assessment_RefNo");

                    b.Property<int?>("AssessmentRuleId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("create_at");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("create_by");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("TaxBaseAmount")
                        .HasColumnType("float");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("PreAssessmentRDM", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Profile", b =>
                {
                    b.Property<long>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("profile_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProfileId"));

                    b.Property<int>("AssetStatus")
                        .HasColumnType("int")
                        .HasColumnName("asset_status");

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("attribute");

                    b.Property<DateTime>("ProfileCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("profile_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProfileCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("profile_create_by");

                    b.Property<string>("ProfileDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("profile_description");

                    b.Property<string>("ProfileGroup")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("profile_group");

                    b.Property<string>("ProfileRef")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("profile_ref");

                    b.Property<string>("ProfileSector")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("profile_sector");

                    b.Property<string>("ProfileStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("profile_status");

                    b.Property<string>("ProfileSubGroup")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("profile_sub_group");

                    b.Property<string>("ProfileSubSector")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("profile_sub_sector");

                    b.Property<string>("SectorElements")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sector_elements");

                    b.Property<string>("SectorSubElements")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sector_sub_elements");

                    b.Property<string>("SubAttribute")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sub_attribute");

                    b.Property<int>("TaxPayerRole")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_role");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_type");

                    b.HasKey("ProfileId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SSP.Payee.ProfilesApi", b =>
                {
                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint")
                        .HasColumnName("ProfileID");

                    b.Property<string>("ProfileDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProfileReferenceNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("ProfileId")
                        .HasName("PK_ProfilesAPI");

                    b.ToTable("Profiles_API", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.RecordLink", b =>
                {
                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("LandInformation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("land_information");

                    b.Property<string>("OccupantsInformation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("occupants_information");

                    b.Property<string>("TaxPayerInformation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tax_payer_information");

                    b.ToTable("Record_Links", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.RevenueStream", b =>
                {
                    b.Property<int>("ReveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reve_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReveId"));

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.Property<DateTime>("RevCreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("rev_create_at");

                    b.Property<int>("RevCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("rev_create_by");

                    b.Property<string>("RevenueStream1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("revenue_stream");

                    b.HasKey("ReveId");

                    b.ToTable("Revenue_Stream", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.RevenueSubStream", b =>
                {
                    b.Property<int>("RevSsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rev_ss_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevSsId"));

                    b.Property<int?>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.Property<DateTime?>("RevSsCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("rev_ss_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("RevSsCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("rev_ss_create_by");

                    b.Property<int?>("RevenueStream")
                        .HasColumnType("int")
                        .HasColumnName("revenue_stream");

                    b.Property<string>("RevenueSubStream1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("revenue_sub_stream");

                    b.HasKey("RevSsId");

                    b.ToTable("Revenue_Sub_Stream", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.RuleEngine", b =>
                {
                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("RuleCode")
                        .HasColumnType("int");

                    b.Property<string>("RuleDesc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RuleFormula")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("RuleId"));

                    b.Property<string>("RuleStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.ToTable("RuleEngine", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.SalaryBreakup", b =>
                {
                    b.Property<long>("SalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("sal_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SalId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<double?>("SalBasic")
                        .HasColumnType("float")
                        .HasColumnName("sal_basic");

                    b.Property<double?>("SalCalcTax")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax");

                    b.Property<double?>("SalCalcTaxMonthly")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax_monthly");

                    b.Property<double?>("SalChIncome")
                        .HasColumnType("float")
                        .HasColumnName("sal_ch_income");

                    b.Property<double?>("SalCra")
                        .HasColumnType("float")
                        .HasColumnName("sal_cra");

                    b.Property<DateTime?>("SalCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sal_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("SalCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("sal_create_by");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("SalGross")
                        .HasColumnType("float")
                        .HasColumnName("sal_gross");

                    b.Property<decimal?>("SalLtg")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("sal_ltg");

                    b.Property<decimal?>("SalMeal")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("sal_meal");

                    b.Property<double?>("SalNhf")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhf");

                    b.Property<double?>("SalNhfDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhf_declared");

                    b.Property<double?>("SalNhis")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhis");

                    b.Property<double?>("SalNhisDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhis_declared");

                    b.Property<decimal?>("SalOtherallowances")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("sal_otherallowances");

                    b.Property<double?>("SalPension")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension");

                    b.Property<double?>("SalPensionDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension_declared");

                    b.Property<double?>("SalRent")
                        .HasColumnType("float")
                        .HasColumnName("sal_rent");

                    b.Property<double?>("SalTaxFreePay")
                        .HasColumnType("float")
                        .HasColumnName("sal_tax_free_pay");

                    b.Property<double?>("SalTrans")
                        .HasColumnType("float")
                        .HasColumnName("sal_trans");

                    b.Property<decimal?>("SalUtility")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("sal_utility");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.HasKey("SalId");

                    b.ToTable("Salary_Breakup", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.SalaryTypeMaster", b =>
                {
                    b.Property<string>("SalaryCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SalaryDesc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.ToTable("SalaryTypeMaster", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.ScheduleComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessID")
                        .HasColumnType("int");

                    b.Property<int>("Commenter")
                        .HasColumnType("int");

                    b.Property<int>("Commenter_ID")
                        .HasColumnType("int");

                    b.Property<int>("Commenter_Type")
                        .HasColumnType("int");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ScheduleComment");
                });

            modelBuilder.Entity("SSP.Payee.ScheduleStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("Assessed")
                        .HasColumnType("bit");

                    b.Property<bool>("Declined")
                        .HasColumnType("bit");

                    b.Property<string>("Forwarded_To_Head_Of_Station")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScheduleStatus");
                });

            modelBuilder.Entity("SSP.Payee.Settlement", b =>
                {
                    b.Property<long>("SettleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("settle_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SettleId"));

                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<int>("SettleCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("settle_create_by");

                    b.Property<DateTime>("SettleCreateOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("settle_create_on")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("SettlementAmount")
                        .HasColumnType("float")
                        .HasColumnName("settlement_amount");

                    b.Property<DateTime>("SettlementDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SettlementMethod")
                        .HasColumnType("int")
                        .HasColumnName("settlement_method");

                    b.Property<string>("SettlementNotes")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("settlement_notes");

                    b.Property<string>("SettlementRef")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("settlement_ref");

                    b.Property<int>("SettlementStatus")
                        .HasColumnType("int")
                        .HasColumnName("settlement_status");

                    b.HasKey("SettleId");

                    b.ToTable("Settlements");
                });

            modelBuilder.Entity("SSP.Payee.SettlementMethod", b =>
                {
                    b.Property<int>("SettId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sett_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettId"));

                    b.Property<DateTime?>("SettCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sett_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("SettCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("sett_create_by");

                    b.Property<string>("SettlementMethod1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("settlement_method");

                    b.HasKey("SettId");

                    b.ToTable("Settlement_Method", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.SettlementStatus", b =>
                {
                    b.Property<int>("SettStId")
                        .HasColumnType("int")
                        .HasColumnName("sett_st_id");

                    b.Property<DateTime>("SettStCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sett_st_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SettStCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("sett_st_create_by");

                    b.Property<string>("SettlementStatus1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("settlement_status");

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("status_description");

                    b.HasKey("SettStId");

                    b.ToTable("Settlement_Status", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.StateMaster", b =>
                {
                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("StateCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("state_code");

                    b.Property<int?>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("state_id");

                    b.Property<string>("StateName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("state_name");

                    b.ToTable("StateMaster", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Submission", b =>
                {
                    b.Property<string>("AssessmentItems")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("AssessmentRule")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Asset")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SubmissionNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxMonth")
                        .HasColumnType("int");

                    b.Property<string>("TaxPayer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("SSP.Payee.SubmissionsBkpaa", b =>
                {
                    b.Property<string>("AssessmentItems")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("AssessmentRule")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Asset")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SubmissionNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxMonth")
                        .HasColumnType("int");

                    b.Property<string>("TaxPayer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable("SubmissionsBKPAA", "spike");
                });

            modelBuilder.Entity("SSP.Payee.SubmissionsDefault", b =>
                {
                    b.Property<string>("AssessmentItems")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("AssessmentRule")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Asset")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SubmissionNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxMonth")
                        .HasColumnType("int");

                    b.Property<string>("TaxPayer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable("Submissions_default", "spike");
                });

            modelBuilder.Entity("SSP.Payee.TablesApiUpdated", b =>
                {
                    b.Property<int?>("Frequency")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("tables_API_Updated", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.TaxNewYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaxNewYears");
                });

            modelBuilder.Entity("SSP.Payee.TaxOffice", b =>
                {
                    b.Property<int>("ToId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("to_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToId"));

                    b.Property<string>("TaStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ta_status");

                    b.Property<string>("TaxOffice1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_office");

                    b.Property<DateTime>("ToCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("to_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ToCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("to_create_by");

                    b.HasKey("ToId")
                        .HasName("PK_tax_office");

                    b.ToTable("Tax_Offices", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.TaxPayerRole", b =>
                {
                    b.Property<long>("TptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("tpt_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TptId"));

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.Property<string>("TaxPayerRole1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_payer_role");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_type");

                    b.Property<int>("TptCreateAt")
                        .HasColumnType("int")
                        .HasColumnName("tpt_create_at");

                    b.Property<DateTime>("TptCreateBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("tpt_create_by")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TptStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tpt_status");

                    b.HasKey("TptId");

                    b.ToTable("Tax_Payer_Roles", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.TaxPayerType", b =>
                {
                    b.Property<int>("TptypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tptype_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TptypeId"));

                    b.Property<string>("TaxPayerType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_payer_type");

                    b.Property<DateTime>("TptypeCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("tptype_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TptypeCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("tptype_create_by");

                    b.Property<string>("TptypeStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tptype_status");

                    b.HasKey("TptypeId");

                    b.ToTable("Tax_Payer_Types", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("title_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("Title1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("TitleCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("title_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TitleCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("title_create_by");

                    b.Property<string>("TitleStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("title_status");

                    b.HasKey("TitleId");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("SSP.Payee.TokenManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Token")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("token");

                    b.Property<string>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__TokenMan__3213E83FA0C45C2C");

                    b.ToTable("TokenManagement", "spike");
                });

            modelBuilder.Entity("SSP.Payee.Town", b =>
                {
                    b.Property<int>("TownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("town_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TownId"));

                    b.Property<int>("Lga")
                        .HasColumnType("int")
                        .HasColumnName("lga");

                    b.Property<DateTime>("TownCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("town_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TownCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("town_create_by");

                    b.Property<string>("TownStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("town_status");

                    b.Property<string>("Towns")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("towns");

                    b.HasKey("TownId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("SSP.Payee.UserManagement", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"));

                    b.Property<int>("BusinessID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxpayerID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.ToTable("UserManagement");
                });

            modelBuilder.Entity("SSP.Payee.VwAssessIndSal", b =>
                {
                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("assessment_date");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<long>("IndId")
                        .HasColumnType("bigint")
                        .HasColumnName("ind_id");

                    b.Property<double?>("SalBasic")
                        .HasColumnType("float")
                        .HasColumnName("sal_basic");

                    b.Property<double?>("SalCalcTax")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax");

                    b.Property<double?>("SalCalcTaxMonthly")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax_monthly");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("SalGross")
                        .HasColumnType("float")
                        .HasColumnName("sal_gross");

                    b.Property<double?>("SalPension")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension");

                    b.Property<double?>("SalPensionDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension_declared");

                    b.Property<double?>("SalRent")
                        .HasColumnType("float")
                        .HasColumnName("sal_rent");

                    b.Property<double?>("SalTrans")
                        .HasColumnType("float")
                        .HasColumnName("sal_trans");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.ToTable((string)null);

                    b.ToView("vw_assess_ind_sal", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwAssessIndSalRefund", b =>
                {
                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("assessment_date");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<long>("IndId")
                        .HasColumnType("bigint")
                        .HasColumnName("ind_id");

                    b.Property<double?>("SalBasic")
                        .HasColumnType("float")
                        .HasColumnName("sal_basic");

                    b.Property<double?>("SalCalcTax")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax");

                    b.Property<double?>("SalCalcTaxMonthly")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax_monthly");

                    b.Property<double?>("SalGross")
                        .HasColumnType("float")
                        .HasColumnName("sal_gross");

                    b.Property<double?>("SalPension")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension");

                    b.Property<double?>("SalPensionDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension_declared");

                    b.Property<double?>("SalRent")
                        .HasColumnType("float")
                        .HasColumnName("sal_rent");

                    b.Property<double?>("SalTrans")
                        .HasColumnType("float")
                        .HasColumnName("sal_trans");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.ToTable((string)null);

                    b.ToView("vw_assess_ind_sal_refund", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwAssessmentRule", b =>
                {
                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PaymentFrequencyId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentFrequencyID");

                    b.Property<string>("PaymentFrequencyName")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<int?>("PaymentOptionId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentOptionID");

                    b.Property<string>("PaymentOptionName")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("ProfileDescription")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("ProfileReferenceNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("RuleRunId")
                        .HasColumnType("int")
                        .HasColumnName("RuleRunID");

                    b.Property<string>("RuleRunName")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_Assessment_Rules", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwAssessmentSearch", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<int?>("AssessmentApprovalStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("assessment_date");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("AssessmentStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Assessment_status");

                    b.Property<int?>("AssessmentStatus1")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentStatus");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("SStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("S_Status");

                    b.Property<string>("SettlementStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("settlement_status");

                    b.Property<string>("TaxPayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tax_payer_name");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tax_payer_rin");

                    b.Property<string>("TaxPayerType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_payer_type");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int")
                        .HasColumnName("tax_year");

                    b.Property<string>("TptypeStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tptype_status");

                    b.ToTable((string)null);

                    b.ToView("vw_assessment_search", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwBusinessCompRelation", b =>
                {
                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("EmailAddress1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.ToTable((string)null);

                    b.ToView("vw_business_comp_relation", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwBusinessDetail", b =>
                {
                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxPayerRinB")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN_b");

                    b.ToTable((string)null);

                    b.ToView("vw_BusinessDetails", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwClearanceCertReq", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("AssessmentChildRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_child_ref");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("IsPaid")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("MonthTax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tax_payer_name");

                    b.Property<string>("YearTax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_clearanceCertReq", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwCompIndSal", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(302)
                        .IsUnicode(false)
                        .HasColumnType("varchar(302)");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyRinOk")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin_ok");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("EmailAddress1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<long>("IndId")
                        .HasColumnType("bigint")
                        .HasColumnName("ind_id");

                    b.Property<string>("IsValidated")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nationality");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int")
                        .HasColumnName("nationality_id");

                    b.Property<double?>("SalBasic")
                        .HasColumnType("float")
                        .HasColumnName("sal_basic");

                    b.Property<double?>("SalCalcTax")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax");

                    b.Property<double?>("SalCalcTaxMonthly")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax_monthly");

                    b.Property<double?>("SalChIncome")
                        .HasColumnType("float")
                        .HasColumnName("sal_ch_income");

                    b.Property<DateTime?>("SalCreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("sal_create_at");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("SalGross")
                        .HasColumnType("float")
                        .HasColumnName("sal_gross");

                    b.Property<long>("SalId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_id");

                    b.Property<double?>("SalNhf")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhf");

                    b.Property<double?>("SalNhis")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhis");

                    b.Property<double?>("SalPension")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension");

                    b.Property<double?>("SalRent")
                        .HasColumnType("float")
                        .HasColumnName("sal_rent");

                    b.Property<double?>("SalTaxFreePay")
                        .HasColumnType("float")
                        .HasColumnName("sal_tax_free_pay");

                    b.Property<double?>("SalTrans")
                        .HasColumnType("float")
                        .HasColumnName("sal_trans");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tin");

                    b.Property<int>("Title")
                        .HasColumnType("int")
                        .HasColumnName("title");

                    b.Property<string>("UserRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("user_rin");

                    b.ToTable((string)null);

                    b.ToView("vw_comp_ind_sal", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwCompany", b =>
                {
                    b.Property<double?>("AccountBalance")
                        .HasColumnType("float")
                        .HasColumnName("account_balance");

                    b.Property<string>("Add1Hno")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Add1_hno");

                    b.Property<string>("Add2Street")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Add2_street");

                    b.Property<string>("Add3OffstreetTown")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Add3_offstreet_town");

                    b.Property<string>("AssetType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("asset_type");

                    b.Property<int?>("BusinessCategory")
                        .HasColumnType("int")
                        .HasColumnName("business_category");

                    b.Property<int?>("BusinessCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("business_create_by");

                    b.Property<DateTime?>("BusinessCreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("business_create_date");

                    b.Property<long?>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("business_id");

                    b.Property<int?>("BusinessLga")
                        .HasColumnType("int")
                        .HasColumnName("business_lga");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("business_name");

                    b.Property<int?>("BusinessOperations")
                        .HasColumnType("int")
                        .HasColumnName("business_operations");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("business_rin");

                    b.Property<int?>("BusinessSector")
                        .HasColumnType("int")
                        .HasColumnName("business_sector");

                    b.Property<int?>("BusinessStructure")
                        .HasColumnType("int")
                        .HasColumnName("business_structure");

                    b.Property<int?>("BusinessSubSector")
                        .HasColumnType("int")
                        .HasColumnName("business_sub_sector");

                    b.Property<int?>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.Property<DateTime>("CompanyCreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("company_create_at");

                    b.Property<int>("CompanyCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("company_create_by");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact_person");

                    b.Property<int>("EconomicActivity")
                        .HasColumnType("int")
                        .HasColumnName("economic_activity");

                    b.Property<string>("EmailAddress1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<string>("EmailAddress2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_2");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_2");

                    b.Property<int>("PreferredNotificationMethod")
                        .HasColumnType("int")
                        .HasColumnName("preferred_notification_method");

                    b.Property<string>("Profile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("profile");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("status");

                    b.Property<int?>("TaxOffice")
                        .HasColumnType("int")
                        .HasColumnName("tax_office");

                    b.Property<string>("TaxPayerStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tax_payer_status");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_type");

                    b.Property<int?>("Town")
                        .HasColumnType("int")
                        .HasColumnName("town");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.ToTable((string)null);

                    b.ToView("vw_companies", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwCorporatesAsset", b =>
                {
                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("AssetTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxPayerRinB")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN_b");

                    b.ToTable((string)null);

                    b.ToView("vw_Corporates_Assets", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwDistinctIndividual", b =>
                {
                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIN");

                    b.ToTable((string)null);

                    b.ToView("vw_distinct_Individuals", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwEmployeeContributionOutputFile", b =>
                {
                    b.Property<decimal?>("AprilContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentYear1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<decimal?>("AugustContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("DecemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EmployeRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployeRIN");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("FebruaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("JanuaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JulyContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JuneContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MarchContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MayContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("NovemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OctoberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("SpetemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable((string)null);

                    b.ToView("vw_EmployeeContributionOutputFile", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwEmployerContribution", b =>
                {
                    b.Property<decimal?>("Apr")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<decimal?>("Aug")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<decimal?>("Dec")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<int?>("EmployeeCount")
                        .HasColumnType("int")
                        .HasColumnName("employeeCount");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("Feb")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jan")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jul")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jun")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Mar")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Nov")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Oct")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Sep")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_Employer_Contribution", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwEmployerContributionOld", b =>
                {
                    b.Property<decimal?>("Apr")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<decimal?>("Aug")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Dec")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("Employername")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("employername");

                    b.Property<decimal?>("Feb")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jan")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jul")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jun")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Mar")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Nov")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Oct")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Sep")
                        .HasColumnType("numeric(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("vw_Employer_Contribution_old", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwGetCollectorOutputFile", b =>
                {
                    b.Property<decimal?>("AprilContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentYear1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<decimal?>("AugustContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("DecemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EmployeRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployeRIN");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(302)
                        .IsUnicode(false)
                        .HasColumnType("varchar(302)");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("FebruaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("JanuaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JulyContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JuneContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MarchContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MayContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("NovemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OctoberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("SpetemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable((string)null);

                    b.ToView("vw_getCollectorOutputFIle", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwGetDistinctInputFile", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_getDistinct_input_file", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwGetPreAssessment", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EmployerRIN");

                    b.Property<double?>("MonthlyTax")
                        .HasColumnType("float")
                        .HasColumnName("monthlyTax");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_GetPreAssessment", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwGetPreAssessment31Jan2020", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EmployerRIN");

                    b.Property<double?>("MonthlyTax")
                        .HasColumnType("float")
                        .HasColumnName("monthlyTax");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_GetPreAssessment_31_JAN_2020", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwIndDetail", b =>
                {
                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("EmailAddress1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<long>("IndId")
                        .HasColumnType("bigint")
                        .HasColumnName("ind_id");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nationality");

                    b.Property<double?>("SalBasic")
                        .HasColumnType("float")
                        .HasColumnName("sal_basic");

                    b.Property<double?>("SalChIncome")
                        .HasColumnType("float")
                        .HasColumnName("sal_ch_income");

                    b.Property<double?>("SalGross")
                        .HasColumnType("float")
                        .HasColumnName("sal_gross");

                    b.Property<double?>("SalNhfDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhf_declared");

                    b.Property<double?>("SalNhisDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhis_declared");

                    b.Property<double?>("SalPensionDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension_declared");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tin");

                    b.Property<string>("UserRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("user_rin");

                    b.ToTable((string)null);

                    b.ToView("vw_ind_details", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwInputFile", b =>
                {
                    b.Property<double>("AnnualMeal")
                        .HasColumnType("float");

                    b.Property<double>("AnnualUtility")
                        .HasColumnType("float");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("Basic")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("BusinessRin1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN_1");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Lsid")
                        .HasColumnType("int")
                        .HasColumnName("LSID");

                    b.Property<double?>("Ltg")
                        .HasColumnType("float")
                        .HasColumnName("LTG");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("Others")
                        .HasColumnType("float");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<double?>("Rent")
                        .HasColumnType("float");

                    b.Property<string>("TaxMonth")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<string>("TaxYear1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TaxYear");

                    b.Property<string>("TpTin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Tp_TIN");

                    b.Property<double?>("Trans")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_InputFile", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwInputFileMain", b =>
                {
                    b.Property<double?>("AnnualGross")
                        .HasColumnType("float");

                    b.Property<string>("AnnualMeal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AnnualUtility")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("Basic")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("BusinessRin1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN_1");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Lsid")
                        .HasColumnType("int")
                        .HasColumnName("LSID");

                    b.Property<double?>("Ltg")
                        .HasColumnType("float")
                        .HasColumnName("LTG");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("nationality");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("Others")
                        .HasColumnType("float");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<double?>("Rent")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TaxMonth")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<string>("TaxYear1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TaxYear");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("title");

                    b.Property<string>("TpTin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Tp_TIN");

                    b.Property<double?>("Trans")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_InputFileMain", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwInputFileMainView", b =>
                {
                    b.Property<double?>("AnnualGross")
                        .HasColumnType("float");

                    b.Property<string>("AnnualMeal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AnnualUtility")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("Basic")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("BusinessRin1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN_1");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Lsid")
                        .HasColumnType("int")
                        .HasColumnName("LSID");

                    b.Property<double?>("Ltg")
                        .HasColumnType("float")
                        .HasColumnName("LTG");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("nationality");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("Others")
                        .HasColumnType("float");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<double?>("Rent")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TaxMonth")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<string>("TaxYear1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TaxYear");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("title");

                    b.Property<string>("TpTin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Tp_TIN");

                    b.Property<double?>("Trans")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_InputFile_MainView", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwInt", b =>
                {
                    b.Property<double?>("AnnualBasic")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualGross")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualMeal")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualRent")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualTransport")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualUtility")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployeeTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeTIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("EndMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("LeaveTransportAnnual")
                        .HasColumnType("float")
                        .HasColumnName("LeaveTransport_Annual");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("OtherAllowancesAnnual")
                        .HasColumnType("float")
                        .HasColumnName("OtherAllowances_Annual");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable((string)null);

                    b.ToView("vw_int", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwLegacySubmission", b =>
                {
                    b.Property<double>("AnnualMeal")
                        .HasColumnType("float");

                    b.Property<double>("AnnualUtility")
                        .HasColumnType("float");

                    b.Property<double?>("Basic")
                        .HasColumnType("float");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<int>("Lsid")
                        .HasColumnType("int")
                        .HasColumnName("LSID");

                    b.Property<double?>("Ltg")
                        .HasColumnType("float")
                        .HasColumnName("LTG");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("Others")
                        .HasColumnType("float");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<double?>("Rent")
                        .HasColumnType("float");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<string>("TpTin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Tp_TIN");

                    b.Property<double?>("Trans")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_Legacy_Submissions", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwMonthlyTaxCompanyWise", b =>
                {
                    b.Property<double?>("Apr")
                        .HasColumnType("float");

                    b.Property<double?>("Aug")
                        .HasColumnType("float");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<double?>("Dec")
                        .HasColumnType("float");

                    b.Property<double?>("Feb")
                        .HasColumnType("float");

                    b.Property<double?>("Jan")
                        .HasColumnType("float");

                    b.Property<double?>("Jul")
                        .HasColumnType("float");

                    b.Property<double?>("Jun")
                        .HasColumnType("float");

                    b.Property<double?>("Mar")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<double?>("Nov")
                        .HasColumnType("float");

                    b.Property<double?>("Oct")
                        .HasColumnType("float");

                    b.Property<double?>("Sep")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_monthly_tax_company_wise", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwMonthlyTaxEmpWise", b =>
                {
                    b.Property<double?>("Apr")
                        .HasColumnType("float");

                    b.Property<double?>("Aug")
                        .HasColumnType("float");

                    b.Property<double?>("Dec")
                        .HasColumnType("float");

                    b.Property<double?>("Feb")
                        .HasColumnType("float");

                    b.Property<double?>("Jan")
                        .HasColumnType("float");

                    b.Property<double?>("Jul")
                        .HasColumnType("float");

                    b.Property<double?>("Jun")
                        .HasColumnType("float");

                    b.Property<double?>("Mar")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<double?>("Nov")
                        .HasColumnType("float");

                    b.Property<double?>("Oct")
                        .HasColumnType("float");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("Sep")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_monthly_tax_emp_wise", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwPateInputFile", b =>
                {
                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("BsnRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bsnRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CmpRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cmpRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tx")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("tx");

                    b.ToTable((string)null);

                    b.ToView("vw_PateInputFile", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwPayeInputFile", b =>
                {
                    b.Property<string>("BsnRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bsnRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tx")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("tx");

                    b.ToTable((string)null);

                    b.ToView("vw_PayeInputFile", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwPayeInputFileN", b =>
                {
                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_PayeInputFile_N", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwPayment", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("AssessmentChildRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_child_ref");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("IsPaid")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("MonthTax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("NotificationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PaidOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("YearTax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_Payment", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwPaymentDetail", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<int?>("AssessmentApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("EmailAddress1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<string>("Expr1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int")
                        .HasColumnName("tax_year");

                    b.ToTable((string)null);

                    b.ToView("vw_payment_details", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwPerformanceReport", b =>
                {
                    b.Property<double>("ActualAssessmentAmt")
                        .HasColumnType("float");

                    b.Property<double>("AmountAccessed")
                        .HasColumnType("float");

                    b.Property<DateTime>("AssessmDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Assessm_date");

                    b.Property<string>("AssessmentDate")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("assessment_date");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<double>("SettlementAmount")
                        .HasColumnType("float")
                        .HasColumnName("settlement_amount");

                    b.Property<DateTime?>("SettlementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date");

                    b.ToTable((string)null);

                    b.ToView("vw_Performance_Report", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwPreAssessmentRdm", b =>
                {
                    b.Property<string>("AssessmentRefNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Assessment_RefNo");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("TaxBaseAmount")
                        .HasColumnType("float");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable((string)null);

                    b.ToView("vw_PreAssessmentRDM", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwRefundCase1", b =>
                {
                    b.Property<double>("AfterJoin")
                        .HasColumnType("float");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<double>("IncCase")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("Vw_RefundCase1", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwRulesCheck", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxMonth1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_Rules_Check", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwRulesCheck1", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxMonth1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_Rules_Check_1", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwRulesCheck11", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxMonth1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_Rules_Check1", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwRulesCheckOld", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_Rules_Check_old", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwSalBkupAfterJoinCase", b =>
                {
                    b.Property<double?>("Apr")
                        .HasColumnType("float");

                    b.Property<double?>("Aug")
                        .HasColumnType("float");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<double?>("Dec")
                        .HasColumnType("float");

                    b.Property<double?>("Feb")
                        .HasColumnType("float");

                    b.Property<double?>("Jan")
                        .HasColumnType("float");

                    b.Property<double?>("Jul")
                        .HasColumnType("float");

                    b.Property<double?>("Jun")
                        .HasColumnType("float");

                    b.Property<double?>("Mar")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<double?>("Nov")
                        .HasColumnType("float");

                    b.Property<double?>("Oct")
                        .HasColumnType("float");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("Sep")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.ToTable((string)null);

                    b.ToView("vw_sal_bkup_after_join_case", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwSalBkupIncrementCase", b =>
                {
                    b.Property<double?>("Apr")
                        .HasColumnType("float");

                    b.Property<double?>("Aug")
                        .HasColumnType("float");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<double?>("Dec")
                        .HasColumnType("float");

                    b.Property<double?>("Feb")
                        .HasColumnType("float");

                    b.Property<double?>("Jan")
                        .HasColumnType("float");

                    b.Property<double?>("Jul")
                        .HasColumnType("float");

                    b.Property<double?>("Jun")
                        .HasColumnType("float");

                    b.Property<double?>("Mar")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<double?>("Nov")
                        .HasColumnType("float");

                    b.Property<double?>("Oct")
                        .HasColumnType("float");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("Sep")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("UserRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("user_rin");

                    b.ToTable((string)null);

                    b.ToView("vw_sal_bkup_increment_case", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwSettlement", b =>
                {
                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<double>("SettlementAmount")
                        .HasColumnType("float")
                        .HasColumnName("settlement_amount");

                    b.Property<DateTime>("SettlementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date");

                    b.Property<string>("SettlementMethod")
                        .IsRequired()
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("settlement_method");

                    b.Property<string>("SettlementRef")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("settlement_ref");

                    b.ToTable((string)null);

                    b.ToView("vw_settlements", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwSettlementReport", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<double>("SettlementAmount")
                        .HasColumnType("float")
                        .HasColumnName("settlement_amount");

                    b.Property<DateTime>("SettlementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date");

                    b.Property<string>("SettlementRef")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("settlement_ref");

                    b.Property<string>("SettlementStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("settlement_status");

                    b.Property<string>("StatusDescription")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("status_description");

                    b.ToTable((string)null);

                    b.ToView("vw_settlement_report", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwSettlementReport2", b =>
                {
                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<double?>("SAmt")
                        .HasColumnType("float")
                        .HasColumnName("s_amt");

                    b.ToTable((string)null);

                    b.ToView("vw_settlement_report_2", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwShowBusiness", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwShowBusinessPayeInputFile", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwShowBusinessPayeInputFileAll", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile_All", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwShowBusinessPayeInputFileAll1", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile_All_1", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwShowBusinessPayeInputFileAll2", b =>
                {
                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Tax_Year");

                    b.Property<int>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile_All_2", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwShowBusinessPayeInputFileAllA", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_Year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile_All_A", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwShowBusinessPayeInputFileAllSelected", b =>
                {
                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_Year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile_All_Selected", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwSubmission", b =>
                {
                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_Submissions", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwSubmissionView", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItems")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("AssessmentRule")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("Asset")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("BusinessID");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Expr1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SubmissionNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxMonth")
                        .HasColumnType("int");

                    b.Property<string>("TaxPayer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_Submission_View", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwSubmissionViewOtherMonth", b =>
                {
                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Asset")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SubmissionNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TaxMonth")
                        .HasColumnType("int");

                    b.Property<string>("TaxPayer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_Submission_View_otherMonths", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwSubmissions1", b =>
                {
                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<decimal?>("Jan")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_submissions_1", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwTaxAnalysis", b =>
                {
                    b.Property<string>("AnnualGross")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("AnnualGrossActual")
                        .HasColumnType("float")
                        .HasColumnName("AnnualGross_Actual");

                    b.Property<string>("AnnualTax")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("AnnualTaxActual")
                        .HasColumnType("float")
                        .HasColumnName("AnnualTax_Actual");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("ChargeableIncome")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Cra")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("CRA");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployeeTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeTIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("EndMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MonthlyTax")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("MonthlyTaxActual")
                        .HasColumnType("float")
                        .HasColumnName("MonthlyTax_Actual");

                    b.Property<string>("Names")
                        .HasMaxLength(201)
                        .IsUnicode(false)
                        .HasColumnType("varchar(201)")
                        .HasColumnName("names");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxFreePay")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ValidatedNhf")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("ValidatedNHF");

                    b.Property<string>("ValidatedNhis")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("ValidatedNHIS");

                    b.Property<string>("ValidatedPension")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable((string)null);

                    b.ToView("vw_taxAnalysis", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwTaxAnalysis24Oct2019", b =>
                {
                    b.Property<string>("AnnualGross")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("AnnualGrossActual")
                        .HasColumnType("float")
                        .HasColumnName("AnnualGross_Actual");

                    b.Property<string>("AnnualTax")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("AnnualTaxActual")
                        .HasColumnType("float")
                        .HasColumnName("AnnualTax_Actual");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("ChargeableIncome")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Cra")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("CRA");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployeeTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeTIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("EndMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MonthlyTax")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("MonthlyTaxActual")
                        .HasColumnType("float")
                        .HasColumnName("MonthlyTax_Actual");

                    b.Property<string>("Names")
                        .HasMaxLength(201)
                        .IsUnicode(false)
                        .HasColumnType("varchar(201)")
                        .HasColumnName("names");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxFreePay")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ValidatedNhf")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("ValidatedNHF");

                    b.Property<string>("ValidatedNhis")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("ValidatedNHIS");

                    b.Property<string>("ValidatedPension")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable((string)null);

                    b.ToView("vw_taxAnalysis_24_OCT_2019", "spike");
                });

            modelBuilder.Entity("SSP.Payee.VwTaxComputation", b =>
                {
                    b.Property<decimal?>("AprilContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("AugustContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<decimal?>("DecemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("FebruaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JanuaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JulyContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JuneContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MarchContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MayContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("NovemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OctoberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("RdmStatus")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("RDM_Status");

                    b.Property<decimal?>("SpetemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_tax_computation", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwTaxComputationEmployerCollection", b =>
                {
                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("Employername")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("employername");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("numeric(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("vw_Tax_Computation_EmployerCollection", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwTaxComputationFinal", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("Month")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<decimal?>("TaxAmt")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<int>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.ToTable((string)null);

                    b.ToView("vw_tax_computation_finals", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwTaxbaseComputationFinal", b =>
                {
                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("Month")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal?>("TaxAmt")
                        .HasColumnType("numeric(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("vw_taxbase_Computation_Final", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.VwTestKaushikView", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItems")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("AssessmentRule")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("Asset")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("BusinessID");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Expr1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SubmissionNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxMonth")
                        .HasColumnType("int");

                    b.Property<string>("TaxPayer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_test_kaushik_view", "spike");
                });

            modelBuilder.Entity("SSP.Payee.Ward", b =>
                {
                    b.Property<int>("Lga")
                        .HasColumnType("int")
                        .HasColumnName("lga");

                    b.Property<string>("WardStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ward_status");

                    b.Property<string>("Wards")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("wards");

                    b.Property<DateTime>("WardsCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wards_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("WardsCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("wards_create_by");

                    b.Property<int>("WardsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wards_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WardsId"));

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("SSP.Payee.WinastAutoEmailDetail", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("auto_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutoId"));

                    b.Property<string>("AutoCallNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("auto_call_number");

                    b.Property<DateTime?>("AutoEmailActualSendTime")
                        .HasColumnType("datetime")
                        .HasColumnName("auto_email_actual_send_time");

                    b.Property<int?>("AutoEmailAgentId")
                        .HasColumnType("int")
                        .HasColumnName("auto_email_agent_id");

                    b.Property<string>("AutoEmailAttachement")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("auto_email_attachement");

                    b.Property<string>("AutoEmailBody")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("auto_email_body");

                    b.Property<DateTime?>("AutoEmailCancelDate")
                        .HasColumnType("datetime")
                        .HasColumnName("auto_email_cancel_date");

                    b.Property<string>("AutoEmailCc1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("auto_email_cc1");

                    b.Property<string>("AutoEmailCc2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("auto_email_cc2");

                    b.Property<string>("AutoEmailClient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("auto_email_client");

                    b.Property<string>("AutoEmailFrom")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("auto_email_from");

                    b.Property<int?>("AutoEmailId")
                        .HasColumnType("int")
                        .HasColumnName("auto_email_id");

                    b.Property<string>("AutoEmailImportance")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("auto_email_importance");

                    b.Property<DateTime?>("AutoEmailSendTime")
                        .HasColumnType("datetime")
                        .HasColumnName("auto_email_send_time");

                    b.Property<int?>("AutoEmailServiceId")
                        .HasColumnType("int")
                        .HasColumnName("auto_email_service_id");

                    b.Property<int?>("AutoEmailStatus")
                        .HasColumnType("int")
                        .HasColumnName("auto_email_status");

                    b.Property<string>("AutoEmailSubject")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("auto_email_subject");

                    b.Property<string>("AutoEmailTo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("auto_email_to");

                    b.Property<string>("AutoEmailType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("auto_email_type");

                    b.HasKey("AutoId");

                    b.ToTable("winast_auto_email_detail", (string)null);
                });

            modelBuilder.Entity("SSP.Payee.WinastAutoSmsDetail", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("auto_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutoId"));

                    b.Property<string>("AutoCallNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("auto_call_number");

                    b.Property<DateTime?>("AutoSmsActualSendTime")
                        .HasColumnType("datetime")
                        .HasColumnName("auto_sms_actual_send_time");

                    b.Property<int?>("AutoSmsAgentId")
                        .HasColumnType("int")
                        .HasColumnName("auto_sms_agent_id");

                    b.Property<string>("AutoSmsBody")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("auto_sms_body");

                    b.Property<string>("AutoSmsClient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("auto_sms_client");

                    b.Property<string>("AutoSmsFrom")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("auto_sms_from");

                    b.Property<int?>("AutoSmsId")
                        .HasColumnType("int")
                        .HasColumnName("auto_sms_id");

                    b.Property<string>("AutoSmsImportance")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("auto_sms_importance");

                    b.Property<DateTime?>("AutoSmsSendTime")
                        .HasColumnType("datetime")
                        .HasColumnName("auto_sms_send_time");

                    b.Property<string>("AutoSmsSentRemarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("auto_sms_sent_remarks");

                    b.Property<int?>("AutoSmsServiceId")
                        .HasColumnType("int")
                        .HasColumnName("auto_sms_service_id");

                    b.Property<int?>("AutoSmsStatus")
                        .HasColumnType("int")
                        .HasColumnName("auto_sms_status");

                    b.Property<string>("AutoSmsSubject")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("auto_sms_subject");

                    b.Property<string>("AutoSmsTo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("auto_sms_to");

                    b.HasKey("AutoId");

                    b.ToTable("winast_auto_sms_detail", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
